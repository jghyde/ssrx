<?php
/**
 * @file
 * Code for the ssrx_pricereports feature.
 */

include_once 'ssrx_pricereports.features.inc';
/**
 * Implements hook_form_FORM_ID_alter() for the node form.
 */
function ssrx_pricereports_form_node_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'drug_price_node_form') {
    $form['title']['#type'] = 'value';
    $form['title']['#required'] = FALSE;
  }
}

/**
 * Implements hook_node_presave()
 *  This func inserts the field_autocomplete value from the drug node type
 *  that was referenced into the
 *  node title before the node is saved.
 *  TThe title of the price report nodes are derived from, and what the
 *  autocomplete is built from (the titles of the price reports).
 */
function ssrx_pricereports_node_presave($node) {
  if ($node->type == 'drug_price') {
    $node->title = '';
    $ref = node_load($node->field_drug_variety[LANGUAGE_NONE][0]['nid']);
    $autocomplete = _ssrx_drug_get_autocomplete_value($ref);
    $node->title = $autocomplete;
  }
}
/**
 * Implements hook_menu()
 */
function ssrx_pricereports_menu() {
  $items = array();
  $items['ssrx/drug-name-search-autocomplete-rebuild'] = array(
    'title' => t('Rebuild the autocomplete table for ssrx price report searches'),
    'page callback' => 'ssrx_pricereports_index_drug_autocomplete',
    'access arguments' => array('administer content'),
    'access callback' => 'user_access',    
  );
  $items['ssrx/pricereports/autocomplete'] = array(
    'page callback' => 'ssrx_pricereports_autocomplete',
    'access arguments' => array('view content'),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );
  $items['report/drug/%/pharmacy/%'] = array(
    'page callback' => 'ssrx_pricereports_report',
    'page arguments' => array(2, 4),
    'access arguments' => array('view content'),
    'type' => MENU_CALLBACK,
    //'access callback' => 'user_access',    
  );
  return $items;
}

/**
 * Custom func that returns a json string
 * of drug tradenames and drug tradename-ingredient-format
 * to make it autocomplete the drug search views filter.
 */
function ssrx_pricereports_autocomplete($string = '') {
  $result = db_query_range('
    SELECT string FROM {autocomplete_drug}
    where string LIKE :ac', 0, 20, array(':ac' => $string . '%'));
  foreach ($result as $row) {
    $autocomplete[$row->string] = $row->string;
  }
  drupal_json_output($autocomplete);
}

/**
 * page callback for reporting prices
 */
function ssrx_pricereports_report($drug_id, $pharmacy_id) {
  global $user;
  $drug = node_load($drug_id);
  $pharmacy = node_load($pharmacy_id);
  $test_node = node_load(898567);
  
  // Build the node
  $node = new stdClass();
  $node->type = 'drug_price';
  $node->field_drug_variety[LANGUAGE_NONE][0]['nid'] = $drug_id;
  $node->field_location[LANGUAGE_NONE][0]['nid'] = $pharmacy_id;
  $node->uid = $user->uid;
  
  // Fill in the rest of the node values:
  node_object_prepare( $node );
  
  // Include the node.pages just in case
  module_load_include('inc', 'node', 'node.pages');
  
  // Return the form to the page:
  return drupal_get_form( 'drug_price_node_form', $node );
}

function ssrx_pricereports_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-prescription-price-search-page') {
    $form['title']['#autocomplete_path'] = 'ssrx/pricereports/autocomplete';
  }
}

/**
 * Rebuilds the autocomple_drug table for super fast
 * autocomplete searches. Like a cache, man.
 */
function ssrx_pricereports_index_drug_autocomplete() {
  // Empty the contents of database
  $throwout = db_truncate('autocomplete_drug')->execute();
  $out = 'autocomplete_drug was emptied.<br />';
  $count = 0;
  // Select all of the titles from the node type named 'drug'
  $query = db_select('node', 'n');
  $query->distinct();
  $query->addField('n','title');
  $query->condition('type', 'drug');
  $results = $query->execute();
  // Insert the tradenames into the autocomplete
  foreach ($results as $str) {
    $data = array(
      'string' => str_replace('&#039;', '', $str->title),
    );
    drupal_write_record('autocomplete_drug', $data);
    $count++;
  }
  // Now insert the tradename ingredient strength format into the table
  // select all of the autocomplete fields
  //$strings = db_query('select field_drug_autocomplete_value from {field_data_field_drug_autocomplete}');
  /*$strings = db_select('field_data_field_drug_autocomplete', 'f');
  $strings->distinct();
  $strings->addField('f','field_drug_autocomplete_value');
  $results2 = $strings->execute; */
  $strings = db_query('select DISTINCT field_drug_autocomplete_value from {field_data_field_drug_autocomplete}');
  $count2 = 0;
  foreach ($strings as $string) {
   // Insert the tradenames into the autocomplete
    $data = array(
      'string' => trim(str_replace('&#039;', '', $string->field_drug_autocomplete_value)),
    );
    drupal_write_record('autocomplete_drug', $data);
    $count2++;
  }
  $out .= $count . ' autocomplete strings from drug node titles generated. <br />';
  $out .= $count2 . ' autocomplete strings added in the ssrx format of Trade-Ingredient-Strength-Format';
  return $out;
}

/**
 * Implements hook_views_pre_render()
 */
function ssrx_pricereports_views_pre_render(&$view) {
  drupal_add_css(drupal_get_path('module', 'ssrx_pricereports') . '/css/ssrx_pricereports.css');
}

/**
 * Implements hook_views_query_alter()
 */
function ssrx_pricereports_views_query_alter(&$view, &$query) {
  return;
}